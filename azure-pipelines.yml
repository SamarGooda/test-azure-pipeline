# trigger:
# - main
# pool:
#     vmImage: 'ubuntu-latest'

# steps:
# # - script: echo Hello, world!
# #   displayName: 'Run a one-line script'


# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
#   displayName: 'Install Terraform 0.14.4'
#   inputs:
#     terraformVersion: 0.14.4

# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform init'
#   inputs:
#     provider: aws
#     workingDirectory: terraform
#     backendServiceAWS: 'Test2-azure-pipeline'
#     backendAWSBucketName: 'test-aws-samar'
#     backendAWSKey: terraform.tfstat




# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform plan'
#   inputs:
#     provider: aws
#     command: plan
#     workingDirectory: terraform
#     environmentServiceNameAWS: 'Test2-azure-pipeline'
#     backendServiceAWS: 'Test2-azure-pipeline'
#     backendAWSBucketName: 'test-aws-samar'
#     backendAWSKey: terraform.tfstat


# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform apply'
#   inputs:
#     provider: aws
#     command: apply
#     workingDirectory: terraform
#     environmentServiceNameAWS: 'Test2-azure-pipeline'
#     backendServiceAWS: 'Test2-azure-pipeline'
#     backendAWSBucketName: 'test-aws-samar'
#     backendAWSKey: terraform.tfstat

trigger:
- main


pool:
  vmImage: 'ubuntu-latest'

steps:
- task: TerraformInstaller@0
  inputs:
       terraformVersion: 0.14.4

- task: TerraformTaskV1@0
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: terraform
    backendServiceAWS: 'Test2-azure-pipeline'
    backendAWSBucketName: 'terraform-state'
    backendAWSKey: 'terraform.tfstate'	


- task: TerraformTaskV1@0
  inputs:
    provider: 'aws'
    command: 'plan'
    workingDirectory: 'terraform'
    environmentServiceNameAWS: 'Test2-azure-pipeline'

- task: TerraformTaskV1@0
  inputs:
    provider: 'aws'
    command: 'apply'
    workingDirectory: 'terraform'
    environmentServiceNameAWS: 'Test2-azure-pipeline'