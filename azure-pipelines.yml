# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  InfraProvisioningResoureGroupName: $(environment)-provisioning-rg
  tfBackendStorageAccountName: $(environment)terraformbackendsa
  tfBackendStorageContainerName: terraform-backend-files
  tfBackendFileName: $(environment)-tf-state-file
  tfvarsFile: $(environment).tfvars

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# steps:
# # - script: echo Hello, world!
# #   displayName: 'Run a one-line script'

# - script: |
#     terraform --version
#     terraform init
#     terraform plan 
#   displayName: 'Run a multi-line script'
steps:
#PARAMETER VALIDATION
- script: |
    set +e
    if [ -z $(environment) ]; then
    echo "target environment not specified";
    exit 1;
    fi
    echo "environment is:" $(environment)

# INSTALLING REQUIRED VERSION OF 
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.12.3'
# AZURE CLI TASK
- task: AzureCLI@1
  inputs:
    azureSubscription: '$(environment)-sp'
    scriptLocation: 'inlineScript'
    inlineScript: 'terraform version'
  displayName: "Terraform Version"
