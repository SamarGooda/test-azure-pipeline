trigger:
  - azure
pool:
    vmImage: 'ubuntu-latest'

steps:

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.14.6'
  inputs:
    terraformVersion: 0.14.6

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform init'
  inputs:
    provider: aws
    workingDirectory: terraform
    backendServiceAWS: 'Test2-azure-pipeline'
    backendAWSBucketName:  'taas-tt-dev-bucket'
    backendAWSKey: 'terraform.tfstate'



- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform plan'
  inputs:
    provider: aws
    command: plan
    workingDirectory: terraform
   # environmentServiceNameAWS: 'Test2-azure-pipeline'
    backendServiceAWS: 'Test2-azure-pipeline'
    backendAWSBucketName:  'taas-tt-dev-bucket'
    backendAWSKey: 'terraform.tfstate'




- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform apply'
  inputs:
    provider: aws
    command: apply
    workingDirectory: terraform
   # environmentServiceNameAWS: 'Test2-azure-pipeline'
    backendServiceAWS: 'Test2-azure-pipeline'
    backendAWSBucketName:  'taas-tt-dev-bucket'
    backendAWSKey: 'terraform.tfstate'
