trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'


- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.14.5'

#- task: AWSShellScript@1
  #inputs:
    #awsCredentials: 'AWS-SANDBOX'
    #regionName: 'us-east-1'
    #scriptType: 'inline'
    #inlineScript: 'cdk deploy --ci --require-approval never'
    #disableAutoCwd: true
    #workingDirectory: '$(System.DefaultWorkingDirectory)'
    #failOnStandardError: false
 # displayName: 'cdk deploy'

# - task:  terraform@0
#   inputs:
#    command: 'init'
#     #providerAzureConnectedServiceName: 'MTC Denver Sandbox'
#     #backendAzureProviderStorageAccountName: 'mtcdenterraformsandbox'
#     #configrationDirectory: $(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform
#   displayName: 'Terraform Init'
    

# - task:  terraform@0
#   inputs:
#    command: 'plan'
#     #providerAzureConnectedServiceName: 'MTC Denver Sandbox'
#     #backendAzureProviderStorageAccountName: 'mtcdenterraformsandbox'
#    configrationDirectory: $(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform
#   displayName: 'Terraform plan'
# #- task: terraform@0
#   #inputs:
#     #command: 'plan'
#     #providerAzureConnectedServiceName: 'MTC Denver Sandbox'
#     #configrationDirectory: $(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform
#    # args:  -out=tfplan.out
#   #displayName: Terraform Plan


